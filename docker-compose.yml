version: '3.8'

services:
  # Application PHP/Laravel
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: development
    container_name: facturx_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - facturx_network
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=local
      - DB_HOST=postgres
      - DB_DATABASE=facturx
      - DB_USERNAME=facturx
      - DB_PASSWORD=password
      - REDIS_HOST=redis

  # Serveur web Nginx
  nginx:
    image: nginx:alpine
    container_name: facturx_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - facturx_network
    depends_on:
      - app

  # Base de données PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: facturx_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: facturx
      POSTGRES_USER: facturx
      POSTGRES_PASSWORD: password
      POSTGRES_ROOT_PASSWORD: root_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - facturx_network

  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    container_name: facturx_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - facturx_network
    command: redis-server --appendonly yes

  # Worker pour les jobs en arrière-plan
  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: development
    container_name: facturx_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - facturx_network
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=local
      - DB_HOST=postgres
      - DB_DATABASE=facturx
      - DB_USERNAME=facturx
      - DB_PASSWORD=password
      - REDIS_HOST=redis
    command: php artisan queue:work --sleep=3 --tries=3

  # Scheduler pour les tâches cron
  scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: development
    container_name: facturx_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - facturx_network
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=local
      - DB_HOST=postgres
      - DB_DATABASE=facturx
      - DB_USERNAME=facturx
      - DB_PASSWORD=password
      - REDIS_HOST=redis
    command: supercrond

  # Node.js pour le développement frontend
  node:
    image: node:20-alpine
    container_name: facturx_node
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - "5173:5173"
    networks:
      - facturx_network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

  # Mailpit pour les tests d'emails en local
  mailpit:
    image: axllent/mailpit
    container_name: facturx_mailpit
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - facturx_network

  # MinIO pour le stockage S3 local
  minio:
    image: minio/minio
    container_name: facturx_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - facturx_network
    environment:
      - MINIO_ROOT_USER=facturx
      - MINIO_ROOT_PASSWORD=password123
    command: server /data --console-address ":9001"

networks:
  facturx_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
